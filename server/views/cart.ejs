<%- include('partials/header') %>

<div class="container">
  <h1>Shopping Cart</h1>

  <% if (success) { %>
    <div class="alert alert-success">
      <%= success %>
    </div>
  <% } %>

  <% if (error) { %>
    <div class="alert alert-danger">
      <%= error %>
    </div>
  <% } %>
  
  <% if (cart && cart.length > 0) { %>
    <div id="cart-items">
      <% cart.forEach((item, index) => { %>
        <div class="cart-item" data-index="<%= index %>">
          <div class="item-details">
            <h3><%= item.name %></h3>
            <p><%= item.service_description || '' %></p>
            <% if (item.options) { %>
              <div class="options-container">
                <% Object.entries(item.options).forEach(([key, value]) => { %>
                  <% if (key === 'viewButton') { %>
                    <%- value %>
                  <% } else if (key === 'print_pages') { %>
                    <span class="option-tag">
                      <%= __('print_pages') %>: 
                      <% if (typeof value === 'object' && value.en && value.ru) { %>
                        <%= locale === 'ru' ? value.ru : value.en %>
                      <% } else if (value === 'all') { %>
                        <%= __('pages_all') %>
                      <% } else { %>
                        <%= value %>
                      <% } %>
                    </span>
                  <% } else if (key !== 'design') { %>
                    <span class="option-tag"><%= key %>: <%= value %></span>
                  <% } %>
                <% }) %>
                <% if (item.hasDesign) { %>
                  <button onclick="window.open('/cart-design/<%= item.designIndex %>', '_blank', 'width=600,height=600')">View Design</button>
                <% } %>
              </div>
            <% } %>
          </div>
          <div class="item-quantity">
            <form action="/api/cart/update" method="POST" style="display: inline;" onsubmit="return validateQuantity(this, <%= item.quantity %>)">
              <input type="hidden" name="index" value="<%= index %>">
              <input type="hidden" name="quantity" value="<%= item.quantity - 1 %>">
              <button type="submit" class="quantity-btn" <%= item.quantity <= 1 ? 'disabled' : '' %>>-</button>
            </form>
            <span class="quantity-display" data-quantity="<%= item.quantity %>" contenteditable="false" unselectable="on" style="-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;"><%= item.quantity %></span>
            <form action="/api/cart/update" method="POST" style="display: inline;" onsubmit="return validateQuantity(this, parseInt(<%= item.quantity %>))">
              <input type="hidden" name="index" value="<%= index %>">
              <input type="hidden" name="quantity" value="<%= item.quantity + 1 %>">
              <button type="submit" class="quantity-btn">+</button>
            </form>
          </div>
          <div class="item-price">
            <p>Price: $<%= (item.price * item.quantity).toFixed(2) %></p>
            <form action="/api/cart/remove" method="POST">
              <input type="hidden" name="index" value="<%= index %>">
              <button type="submit" class="remove-btn">Remove</button>
            </form>
          </div>
        </div>
      <% }) %>
    </div>

    <div id="cart-total-container">
      <h2>Total: <span id="cart-total">$<%= cartTotal.toFixed(2) %></span></h2>
    </div>

    <div class="cart-actions">
      <form action="/api/cart/clear" method="POST" style="display: inline;">
        <button type="submit" class="clear-cart">Clear Cart</button>
      </form>
      <button class="checkout-btn" onclick="window.location.href='/checkout/webhook'">Proceed to Checkout</button>
    </div>
  <% } else { %>
    <div class="cart-empty">
      <p>Your cart is empty</p>
      <a href="/" class="btn btn-primary">Browse Services</a>
    </div>
  <% } %>
</div>

<!-- Include cart.js and its dependencies -->
<script src="/js/cart.js"></script>
<script>
  console.log(cart);  
</script>
<style>
    .preview-container {
        margin: 20px 0;
        max-width: 100%;
        overflow: hidden;
    }
    .options-container {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin: 10px 0;
        align-items: center;
    }
    .option-tag {
        background: #f0f0f0;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.9em;
        text-transform: capitalize;
    }
    .option-tag::first-letter {
        text-transform: uppercase;
    }
    .options-container button {
        background: #007bff;
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.2s;
    }
    .options-container button:hover {
        background: #0056b3;
    }
    .quantity-display {
        display: inline-block;
        min-width: 30px;
        text-align: center;
        padding: 0 10px;
        pointer-events: none;
        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
    }
</style>

<script>
// Prevent any interaction with quantity display
document.querySelectorAll('.quantity-display').forEach(display => {
  // Prevent all possible ways of editing
  display.addEventListener('keydown', (e) => e.preventDefault());
  display.addEventListener('keyup', (e) => e.preventDefault());
  display.addEventListener('keypress', (e) => e.preventDefault());
  display.addEventListener('paste', (e) => e.preventDefault());
  display.addEventListener('drop', (e) => e.preventDefault());
  display.addEventListener('cut', (e) => e.preventDefault());
  display.addEventListener('copy', (e) => e.preventDefault());
  display.addEventListener('contextmenu', (e) => e.preventDefault());
  display.addEventListener('mousedown', (e) => e.preventDefault());
  display.addEventListener('mouseup', (e) => e.preventDefault());
  display.addEventListener('click', (e) => e.preventDefault());
  display.addEventListener('input', (e) => e.preventDefault());
  display.addEventListener('change', (e) => e.preventDefault());
  
  // Make it visually clear it's not editable
  display.style.cursor = 'default';
  display.style.backgroundColor = 'transparent';
});

function validateQuantity(form, currentQuantity) {
  console.log('=== Quantity Update Debug ===');
  console.log('Current Quantity:', currentQuantity);
  console.log('Form:', form);
  
  const quantityInput = form.querySelector('input[name="quantity"]');
  console.log('Quantity Input Element:', quantityInput);
  console.log('Raw Input Value:', quantityInput.value);
  
  const newQuantity = parseInt(quantityInput.value);
  console.log('Parsed New Quantity:', newQuantity);
  console.log('Is NaN:', isNaN(newQuantity));
  console.log('Is <= 0:', newQuantity <= 0);
  
  if (isNaN(newQuantity) || newQuantity <= 0) {
    console.log('Validation Failed: Invalid Quantity');
    alert('Quantity must be greater than 0');
    // Reset the quantity display to the current valid quantity
    const quantityDisplay = form.parentElement.querySelector('.quantity-display');
    console.log('Quantity Display Element:', quantityDisplay);
    if (quantityDisplay) {
      console.log('Resetting to current quantity:', currentQuantity);
      quantityDisplay.textContent = currentQuantity;
    }
    return false;
  }
  
  console.log('Validation Passed: Proceeding with update');
  return true;
}

// Add debug logging for quantity display events
document.querySelectorAll('.quantity-display').forEach(display => {
  const events = ['keydown', 'keyup', 'keypress', 'paste', 'drop', 'cut', 'copy', 
                 'contextmenu', 'mousedown', 'mouseup', 'click', 'input', 'change'];
  
  events.forEach(eventType => {
    display.addEventListener(eventType, (e) => {
      console.log(`Prevented ${eventType} event on quantity display`);
      e.preventDefault();
    });
  });
  
  // Make it visually clear it's not editable
  display.style.cursor = 'default';
  display.style.backgroundColor = 'transparent';
});
</script>

<%- include('partials/footer') %> 