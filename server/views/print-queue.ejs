<!DOCTYPE html>
<html lang="<%= locale %>">
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/Print-queue.css">
    <link rel="stylesheet" href="/styles/Footer.css">
    <link rel="stylesheet" href="/styles/Header.css">
    <link rel="stylesheet" href="/styles/Buttons.css">
    <title><%= __('print_queue_title') %></title>
    <%- include('./partials/favicon') %>

    <!-- Add Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        .size-chart-btn {
            font-size: 0.875rem;
            text-decoration: underline;
            background: none;
            border: none;
            color: #0d6efd;
            padding: 0;
            margin-left: 10px;
            cursor: pointer;
        }
        .size-chart-btn:hover {
            color: #0a58ca;
        }
        .size-table {
            width: 100%;
            margin-top: 1rem;
            border-collapse: collapse;
        }
        .size-table th, .size-table td {
            border: 1px solid #dee2e6;
            padding: 0.75rem;
            text-align: center;
        }
        .size-table th {
            background-color: #f8f9fa;
        }
        .measurement-note {
            font-size: 0.875rem;
            color: #6c757d;
            margin-top: 1rem;
        }
        /* Merch design styles */
        .merch-design-details {
            display: flex;
            gap: 2rem;
            align-items: flex-start;
        }
        .design-preview {
            max-width: 200px;
            margin-top: 1rem;
        }
        .design-preview img {
            max-width: 100%;
            height: auto;
            border: 1px solid #dee2e6;
            border-radius: 4px;
        }
        .item-card {
            background: #fff;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1rem;
        }
        .print-actions {
            margin-top: 1rem;
            display: flex;
            gap: 1rem;
        }
        .btn-print {
            background-color: #0d6efd;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        .btn-print:hover {
            background-color: #0b5ed7;
        }
        .filter-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
        }
        .filter-buttons .btn {
            padding: 0.5rem 1.5rem;
            border: 1px solid #dee2e6;
            background-color: #fff;
            color: #6c757d;
            transition: all 0.3s ease;
        }
        .filter-buttons .btn:hover,
        .filter-buttons .btn.active {
            background-color: #0d6efd;
            color: #fff;
            border-color: #0d6efd;
        }
        .order-card {
            transition: opacity 0.3s ease;
        }
        .order-card.hidden {
            display: none;
        }
    </style>

</head>
<body>
    <%- include('./partials/header') %>

    <div class="print-queue-container">
        <div class="container">
            <h1 class="page-title"><%= __('print_queue_title') %></h1>
            
            <div class="filter-buttons mb-4">
                <button class="btn active" data-filter="all">
                    <%= __('all_orders') %>
                </button>
                <button class="btn" data-filter="Document Printing">
                    <%= __('document_printing') %>
                </button>
                <button class="btn" data-filter="Custom T-Shirt">
                    <%= __('custom_tshirt') %>
                </button>
            </div>

            <% if (orders && orders.length > 0) { %>
                <div id="orders-container">
                    <% orders.forEach(order => { %>
                        <div class="card order-card" id="order-<%= order.id %>">
                            <div class="order-header">
                                <div class="row align-items-center">
                                    <div class="col">
                                        <h5 class="mb-0"><%= __('order_id') %>: #<%= order.id %></h5>
                                    </div>
                                    <div class="col-auto">
                                        <span class="status-badge badge bg-info">
                                            <%= __('status_processing') %>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="order-body">
                                <div class="order-info">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <p><strong><%= __('customer') %>:</strong> <%= order.user.username %></p>
                                            <p><strong><%= __('email') %>:</strong> <%= order.user.email %></p>
                                            <p><strong><%= __('order_date') %>:</strong> <%= new Date(order.created_at).toLocaleString(locale) %></p>
                                        </div>
                                        <div class="col-md-6">
                                            <p><strong><%= __('total_price') %>:</strong> <%= __('currency_symbol') %><%= order.total_price.toFixed(2) %></p>
                                            <p><strong><%= __('payment_status') %>:</strong> 
                                                <span class="badge bg-success"><%= __('payment_status_completed') %></span>
                                            </p>
                                        </div>
                                    </div>
                                </div>

                                <div class="order-items">
                                    <h6 class="mb-3"><%= __('order_items') %>:</h6>
                                    <% order.order_items.forEach(item => { %>
                                        <div class="item-card">
                                            <h6><%= item.service.name  === "Document Printing" ? __('document_printing') : __('custom_tshirt') %></h6>
                                            <% 
                                            // Ensure options is properly parsed
                                            const options = typeof item.options === 'string' ? JSON.parse(item.options) : item.options;
                                            %>
                                            <div class="item-details">
                                                <% if (item.service.name === "Document Printing") { %>
                                                    <div>
                                                        <p><strong><%= __('filename') %>:</strong> <%= options.filename %></p>
                                                        <p><strong><%= __('print_pages') %>:</strong> 
                                                            <% if (options.print_pages === 'all') { %>
                                                                <%= __('pages_all') %>
                                                            <% } else if (options.print_pages && options.totalDocumentPages) { %>
                                                                <%= options.print_pages %>
                                                            <% } else if (options.print_pages) { %>
                                                                <%= options.print_pages %>
                                                            <% } else if (options.totalDocumentPages) { %>
                                                                <%= __('total_pages') %>: <%= options.totalDocumentPages %>
                                                            <% } else { %>
                                                                <%= __('pages_all') %>
                                                            <% } %>                                                            
                                                        </p>
                                                        <p><strong><%= __('quantity') %>:</strong> <%= item.quantity %></p>
                                                    </div>
                                                    <div>
                                                        <p><strong><%= __('color_mode') %>:</strong> 
                                                            <%= options.color === 'color' ? __('color_color') : __('color_black_white') %>
                                                        </p>
                                                        <p><strong><%= __('paper_size') %>:</strong> 
                                                            <%= __(`paper_size_${options.paper_size.toLowerCase()}`) %>
                                                        </p>
                                                        <p><strong><%= __('double_sided') %>:</strong> 
                                                            <%= options.double_sided === 'No' ? __('double_sided_no') : __('double_sided_yes') %>
                                                        </p>
                                                    </div>
                                                <% } else if (item.service.name === "Custom T-Shirt") { %>
                                                    <div class="merch-design-details">
                                                        <div>
                                                            <p><strong><%= __('size') %>:</strong> <%= __(`size_${options.size.toLowerCase()}`) %></p>
                                                            <p><strong><%= __('quantity') %>:</strong> <%= item.quantity %></p>
                                                            <% if (options.designId) { %>
                                                                <p><strong><%= __('design_id') %>:</strong> <%= options.designId %></p>
                                                            <% } %>
                                                        </div>
                                                        <% if (options.design) { %>
                                                            <div class="design-preview">
                                                                <img src="<%= options.design %>" alt="<%= __('design_preview') %>" class="img-thumbnail">
                                                            </div>
                                                        <% } %>
                                                    </div>
                                                <% } %>
                                            </div>
                                            
                                            <div class="print-actions">
                                                <button class="btn btn-print" onclick="printDocument('<%= options.filename || `design_${order.id}_${item.id}.png` %>', <%= order.id %>, '<%= item.service.name %>')">
                                                    <i class="fas fa-print"></i> 
                                                    <%= item.service.name === "Document Printing" ? __('print') : __('print_design') %>
                                                </button>
                                            </div>
                                        </div>
                                    <% }) %>
                                </div>
                            </div>

                            <div class="order-footer">
                                <button class="btn btn-complete" onclick="completeOrder(<%= order.id %>)">
                                    <i class="fas fa-check"></i> <%= __('mark_as_completed') %>
                                </button>
                            </div>
                        </div>
                    <% }) %>
                </div>
            <% } else { %>
                <div class="alert alert-info">
                    <%= __('no_orders_in_queue') %>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Complete Order Modal -->
    <div class="modal fade" id="completeOrderModal" tabindex="-1" aria-labelledby="completeOrderModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="completeOrderModalLabel"><%= __('complete_order') %></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><%= __('confirm_complete_order') %></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-bs-dismiss="modal"><%= __('cancel') %></button>
                    <button type="button" class="btn" id="confirmCompleteBtn">
                        <i class="fas fa-check"></i> <%= __('confirm') %>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Success Modal -->
    <div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="successModalLabel"><%= __('success') %></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><%= __('order_completed_success') %></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal"><%= __('ok') %></button>
                </div>
            </div>
        </div>
    </div>

    <!-- Error Modal -->
    <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="errorModalLabel"><%= __('error') %></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="errorModalMessage"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal"><%= __('ok') %></button>
                </div>
            </div>
        </div>
    </div>

    <%- include('./partials/footer') %>

    <script>
        // Define completeOrder function in global scope
        function completeOrder(orderId) {
            const completeOrderModal = new bootstrap.Modal(document.getElementById('completeOrderModal'));
            document.getElementById('confirmCompleteBtn').dataset.orderId = orderId;
            completeOrderModal.show();
        }

        // Add filter functionality
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize Bootstrap modals
            const completeOrderModal = new bootstrap.Modal(document.getElementById('completeOrderModal'));
            const successModal = new bootstrap.Modal(document.getElementById('successModal'));
            const errorModal = new bootstrap.Modal(document.getElementById('errorModal'));

            // Handle complete order confirmation
            document.getElementById('confirmCompleteBtn').addEventListener('click', async function() {
                const orderId = this.dataset.orderId;
                if (orderId) {
                    try {
                        const response = await fetch(`/complete-order/${orderId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        if (response.ok) {
                            const orderCard = document.getElementById(`order-${orderId}`);
                            orderCard.remove();

                            if (document.querySelectorAll('.order-card').length === 0) {
                                document.getElementById('orders-container').innerHTML = `
                                    <div class="alert alert-info">
                                        <%= __('no_orders_in_queue') %>
                                    </div>
                                `;
                            }

                            completeOrderModal.hide();
                            successModal.show();
                        } else {
                            throw new Error('<%= __("error_completing_order") %>');
                        }
                    } catch (error) {
                        console.error('Error completing order:', error);
                        document.getElementById('errorModalMessage').textContent = error.message || '<%= __("error_completing_order") %>';
                        completeOrderModal.hide();
                        errorModal.show();
                    }
                }
            });

            const filterButtons = document.querySelectorAll('.filter-buttons .btn');
            const orderCards = document.querySelectorAll('.order-card');

            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    // Update active state of buttons
                    filterButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');

                    const filter = this.dataset.filter;
                    console.log('Selected filter:', filter);

                    orderCards.forEach(card => {
                        const orderItems = card.querySelectorAll('.item-card');
                        let shouldShow = false;

                        if (filter === 'all') {
                            shouldShow = true;
                        } else {
                            orderItems.forEach(item => {
                                const serviceName = item.querySelector('h6').textContent.trim();
                                console.log('Comparing:', serviceName, 'with filter:', filter);
                                // Check if the service name matches the filter
                                if (serviceName === filter || 
                                    (filter === 'Document Printing' && serviceName === '<%= __("document_printing") %>') ||
                                    (filter === 'Custom T-Shirt' && serviceName === '<%= __("custom_tshirt") %>')) {
                                    shouldShow = true;
                                }
                            });
                        }

                        card.classList.toggle('hidden', !shouldShow);
                    });

                    // Check if any orders are visible
                    const visibleOrders = document.querySelectorAll('.order-card:not(.hidden)');
                    const noOrdersMessage = document.querySelector('.alert-info');
                    
                    if (visibleOrders.length === 0) {
                        if (!noOrdersMessage) {
                            const message = document.createElement('div');
                            message.className = 'alert alert-info';
                            message.textContent = '<%= __("no_orders_of_type") %>';
                            document.getElementById('orders-container').appendChild(message);
                        }
                    } else if (noOrdersMessage) {
                        noOrdersMessage.remove();
                    }
                });
            });
        });

        function printDocument(filename, orderId, serviceName) {
            const iframe = document.createElement('iframe');
            iframe.style.display = 'none';
            document.body.appendChild(iframe);

            fetch(`/get-print-file/${orderId}`)
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => {
                            throw new Error(err.error || '<%= __("error_fetching_document") %>');
                        });
                    }
                    return response.blob();
                })
                .then(blob => {
                    const url = URL.createObjectURL(blob);
                    iframe.src = url;
                    
                    iframe.onload = () => {
                        try {
                            // Print the document
                            const printed = iframe.contentWindow.print();
                            
                            // Listen for both afterprint event and use a fallback timeout
                            let cleanupDone = false;
                            
                            // Function to cleanup resources
                            const cleanup = () => {
                                if (!cleanupDone) {
                                    cleanupDone = true;
                                    setTimeout(() => {
                                        URL.revokeObjectURL(url);
                                        iframe.remove();
                                    }, 1000);
                                }
                            };

                            // Listen for the afterprint event
                            iframe.contentWindow.addEventListener('afterprint', cleanup);
                            
                            // Fallback cleanup after 60 seconds in case afterprint doesn't fire
                            setTimeout(cleanup, 60000);
                        } catch (error) {
                            console.error('Error printing:', error);
                            alert('<%= __("error_printing") %>');
                            URL.revokeObjectURL(url);
                            iframe.remove();
                        }
                    };
                })
                .catch(error => {
                    console.error('Error:', error.message);
                    alert(error.message || '<%= __("error_fetching_document") %>');
                    iframe.remove();
                });
        }
    </script>
</body>
</html> 