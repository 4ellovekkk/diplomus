generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Changelog {
  id                               Int       @id(map: "Changelog_pk") @default(autoincrement())
  userId                           Int?
  field                            String?   @db.NVarChar(Max)
  oldValue                         String?   @db.NVarChar(Max)
  newValue                         String?   @db.NVarChar(Max)
  changedAt                        DateTime? @default(dbgenerated("sysdatetime()"), map: "DF__Changelog__chang__5CD6CB2B") @db.DateTime
  changedBy                        Int?
  users_Changelog_changedByTousers users?    @relation("Changelog_changedByTousers", fields: [changedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Changelog__chang__5DCAEF64")
  users_Changelog_userIdTousers    users?    @relation("Changelog_userIdTousers", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Changelog__userI__5BE2A6F2")
}

model order_items {
  id         Int       @id(map: "PK__order_it__3213E83FFA631AA4") @default(autoincrement())
  order_id   Int
  service_id Int
  quantity   Int
  price      Decimal   @db.Decimal(10, 2)
  options    String?   @db.NVarChar(Max)
  subtotal   Decimal   @db.Decimal(10, 2)
  created_at DateTime? @default(now(), map: "DF__order_ite__creat__7E37BEF6")
  updated_at DateTime? @default(now(), map: "DF__order_ite__updat__7F2BE32F")
  order      orders    @relation(fields: [order_id], references: [id], onUpdate: NoAction, map: "FK__order_ite__order__00200768")
  service    services  @relation(fields: [service_id], references: [id], onUpdate: NoAction, map: "FK__order_ite__servi__01142BA1")

  @@index([order_id], map: "IX_order_items_order_id")
}

model order_statuses {
  id         Int       @id(map: "PK__order_st__3213E83FAAAA7AFD") @default(autoincrement())
  name       String    @db.NVarChar(50)
  created_at DateTime? @default(now(), map: "DF__order_sta__creat__6FE99F9F")
  updated_at DateTime? @default(now(), map: "DF__order_sta__updat__70DDC3D8")
  orders     orders[]
}

model orders {
  id          Int            @id(map: "PK__orders__3213E83FCB03BBB6") @default(autoincrement())
  user_id     Int
  payment_id  Int?
  total_price Decimal        @db.Decimal(10, 2)
  status_id   Int
  created_at  DateTime?      @default(now(), map: "DF__orders__created___778AC167")
  updated_at  DateTime?      @default(now(), map: "DF__orders__updated___787EE5A0")
  order_items order_items[]
  payment     payments?      @relation(fields: [payment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__orders__payment___7A672E12")
  status      order_statuses @relation(fields: [status_id], references: [id], onUpdate: NoAction, map: "FK__orders__status_i__7B5B524B")
  user        users          @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "FK__orders__user_id__797309D9")

  @@index([payment_id], map: "IX_orders_payment_id")
  @@index([user_id], map: "IX_orders_user_id")
}

model payments {
  id                Int       @id(map: "PK__payments__3213E83FC0430BFC") @default(autoincrement())
  payment_method    String    @db.NVarChar(50)
  amount            Decimal   @db.Decimal(10, 2)
  payment_status    String    @db.NVarChar(50)
  stripe_payment_id String?   @db.NVarChar(255)
  stripe_session_id String?   @db.NVarChar(255)
  currency          String    @db.NVarChar(10)
  payment_details   String?   @db.NVarChar(Max)
  created_at        DateTime? @default(now(), map: "DF__payments__create__73BA3083")
  updated_at        DateTime? @default(now(), map: "DF__payments__update__74AE54BC")
  orders            orders[]
}

model services {
  id          Int           @id(map: "PK__services__3213E83FC8246582") @default(autoincrement())
  name        String        @unique(map: "UQ__services__72E12F1B328B0CA6") @db.NVarChar(100)
  description String?       @db.NVarChar(Max)
  price       Decimal       @db.Decimal(10, 2)
  created_at  DateTime?     @default(now(), map: "DF__services__create__3F466844")
  order_items order_items[]
}

model users {
  id                                   Int         @id(map: "PK__users__3213E83F330722C6") @default(autoincrement())
  username                             String      @unique(map: "UQ__users__F3DBC5729B67007B") @db.NVarChar(50)
  email                                String      @unique(map: "UQ__users__AB6E6164CEB82026") @db.NVarChar(100)
  password_hash                        String      @db.NVarChar(255)
  role                                 String      @default("customer", map: "DF__users__role__3A81B327") @db.NVarChar(10)
  created_at                           DateTime?   @default(now(), map: "DF__users__created_a__3B75D760")
  is_locked                            Boolean?
  goodleId                             String?     @db.VarChar(Max)
  name                                 String?     @db.NVarChar(Max)
  phone                                String?     @db.VarChar(13)
  adress                               String?     @db.NVarChar(Max)
  Changelog_Changelog_changedByTousers Changelog[] @relation("Changelog_changedByTousers")
  Changelog_Changelog_userIdTousers    Changelog[] @relation("Changelog_userIdTousers")
  orders                               orders[]
}
